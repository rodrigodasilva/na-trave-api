// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  root
  admin
  seller
  user
}

model User {
  id        String    @id @default(cuid())
  name      String    @db.VarChar(128)
  username  String    @unique @db.VarChar(32)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  role      Role      @default(seller)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  hunches   Hunch[]

  @@map("user")
}

model Team {
  id          Int       @id @default(autoincrement())
  name        String    @unique @db.VarChar(32)
  abbr        String    @unique @db.VarChar(3)
  logo        String    @db.VarChar(255)
  homeMatches Match[]   @relation(name: "homeTeamTeamId")
  awayMatches Match[]   @relation(name: "awayTeamTeamId")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt

  @@map("team")
}

model Match {
  id            Int       @id @default(autoincrement())
  homeTeam      Team?     @relation(fields: [homeTeamId], references: [id], name: "homeTeamTeamId")
  homeTeamId    Int?
  awayTeam      Team?     @relation(fields: [awayTeamId], references: [id], name: "awayTeamTeamId")
  awayTeamId    Int?
  homeTeamScore Int?
  awayTeamScore Int?
  datetime      DateTime
  stage         String    @db.VarChar(32)
  hunches       Hunch[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt

  @@index([homeTeamId, awayTeamId])
  @@map("match")
}

enum Payment {
 finished
 pending
}

model Hunch {
  id            String    @id @default(cuid())
  seller        User      @relation(fields: [sellerId], references: [id])
  sellerId      String
  match         Match     @relation(fields: [matchId], references: [id])
  matchId       Int
  homeTeamScore Int
  awayTeamScore Int
  contactName   String
  contactPhone  String
  payment       Payment   @default(pending)
  won           Boolean?  @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  
  @@index([sellerId, matchId])
  @@map("hunch")
}